<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="write your description here.">

    <title>Recursion</title>


    <link rel="stylesheet" href="http://yui.yahooapis.com/pure/0.4.2/pure.css">


    <!--[if lte IE 8]>
        <link rel="stylesheet" href="css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="../../../css/layouts/side-menu.css">
    <!--<![endif]-->
     
    

    <!-- Codemirror setup -->
    <link rel="stylesheet" href="../addon/lint/lint.css">
    <link rel="stylesheet" href="../lib/codemirror.css">
    <link rel="stylesheet" href="../theme/neat.css">
    <script src="../lib/codemirror.js"></script>
    <script src="../mode/javascript/javascript.js"></script>
    <script src="../keymap/extra.js"></script>
    <script src="../addon/selection/active-line.js"></script>
    <script src="../addon/edit/matchbrackets.js"></script>
    <script src="../mode/css/css.js"></script>

    <!-- JSHint setup -->
    <script src="http://ajax.aspnetcdn.com/ajax/jshint/r07/jshint.js"></script>
    <script src="https://rawgithub.com/zaach/jsonlint/79b553fb65c192add9066da64043458981b3972b/lib/jsonlint.js"></script>
    <script src="https://rawgithub.com/stubbornella/csslint/master/release/csslint.js"></script>
    <script src="../addon/lint/lint.js"></script>
    <script src="../addon/lint/javascript-lint.js"></script>
    <script src="../addon/lint/json-lint.js"></script>
    <script src="../addon/lint/css-lint.js"></script>

</head>


<body>


    <div id="layout">
        <!-- Menu toggle -->
        <a href="#menu" id="menuLink" class="menu-link">
            <!-- Hamburger icon -->
            <span></span>
        </a>

        <div id="menu">
            <div class="pure-menu pure-menu-open">
                <a class="pure-menu-heading" href="#">Recursion</a>

                <ul>
                    <li class="menu-item-divided pure-menu-selected">
                        <a href="../../../introduction.html">Introduction</a>
                    </li>
                    <li><a href="../../../factorials.html">Example: Factorials</a></li>
                    <li><a href="../../../palindromes.html">Example: Palindromes</a></li>
                    <li><a href="../../../98CodeMirror/codemirror-3.21/demo/Toh_with_Menu">Challenge: Towers of Hanoi</a></li>
                    <li><a href="../../../mergesort.html">Challenge: Merge Sort</a></li>
                    <li><a href="../../../whyrecursion.html">Why Recursion?</a></li>
                </ul>
            </div>
        </div>

        <div id="main">
            <div class="header"><h1>Towers of Hanoi</h1></div>

            <div class="content">



             <p>
            Let's take a look at another recursive function. In this case, we want to evaluate whether a word is a palindrome. A <b>palindrome</b> is a word, phrase, or number that's the same when written backwards and forwards. For example, the names "hannah" and "bob."
            </p>







        <style type="text/css">
          .CodeMirror {
            
            border: 2px solid #E0E0E0; 
            font-size:15px;
            height: auto;
            viewportMargin: 10;
          }
         
        </style>


        <article style="width: 700px; height: 600px;">
        <div><textarea id="codeInputPane" name="code" runnable="true" mode="javascript">
function is_palindrome(word) {
    console.log("Checking if " + word + " is a palindrome...");
    
    if (word.length <= 1) {
        console.log("It is a palindrome!");
        return true;
    } 

    else {
        if (word.charAt(0) == word.charAt(word.length-1)) {
            return is_palindrome(word.substring(1,word.length-1));                
        } 

        else {
            console.log("It is not a palindrome.");
            return false;
        }
    }
}

is_palindrome('hannah');
        
   
        
        </textarea>
        </div>

        <p><button type=button onclick="run()">run</button></p>

        <script type = "text/javascript" >
      
        // convenience function to get the id attribute of generated sketch html element
            var processingInstance = function getProcessingSketchId () { return 'toh'; }
            
            var editor = CodeMirror.fromTextArea(document.getElementById("codeInputPane"), {
            //mode: "javascript",
            theme: "neat",
            autofocus: true,
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            gutters: ["CodeMirror-lint-markers"],
            lint: true
            });
            
         
            function run(){
                var content = editor.getValue();        
                var result = eval(content);
                var logOfConsole = [];

                var _log = console.log,
                _warn = console.warn,
                _error = console.error;

                function outputArguments(arguments, type)
                {
                outputBox = document.getElementById('demo');
                for(i in arguments)
                {
                    if(type == 0)
                    {
                    outputBox.innerHTML += '<p class="consoleLog">'+(arguments[i])+'</p>';
                    }
                    else if (type == 1)
                    {
                    outputBox.innerHTML += '<p class="consoleWarn">'+(arguments[i])+'</p>'; 
                    }
                    else
                    {
                    outputBox.innerHTML += '<p class="consoleError">'+(arguments[i])+'</p>';
                    }
                }
            }

            console.log = function() {
                outputArguments(arguments, 0);
                logOfConsole.push({method: 'log', arguments:arguments});
                return _log.apply(console, arguments);
            };

            console.warn = function() {
                outputArguments(arguments, 1);
                logOfConsole.push({method: 'warn', arguments: arguments});
                return _warn.apply(console, arguments);
            };

            console.error = function() {
                outputArguments(arguments, 2);
                logOfConsole.push({method: 'error', arguments: arguments});
                return _error.apply(console, arguments);
            };

            window.onerror = function (msg, url, line) {
                console.error("Caught[via window.onerror]: '" + msg + "' from " + url + ":" + line);
                return true; // same as preventDefault
                };
                
            }
          
            </script>
            
            <div id="demo"  style="width:10;height:10;overflow-y:scroll"></div>
            </article>








            </div>
        </div>
    </div>


    <script src="../../../js/ui.js"></script>


</body>
</html>